import{D as n,e as t}from"./_plugin-vue_export-helper-BDeLwvSG.js";import"./index-6pmZwgIe.js";class c{constructor(){this.supportCascades=!0}loadCubeData(p,i,m,e){const o=i.getEngine();let a,l=!1,d=1e3;if(Array.isArray(p))for(let s=0;s<p.length;s++){const h=p[s];a=n.GetDDSInfo(h),i.width=a.width,i.height=a.height,l=(a.isRGB||a.isLuminance||a.mipmapCount>1)&&i.generateMipMaps,o._unpackFlipY(a.isCompressed),n.UploadDDSLevels(o,i,h,a,l,6,-1,s),!a.isFourCC&&a.mipmapCount===1?o.generateMipMapsForCubemap(i):d=a.mipmapCount-1}else{const s=p;a=n.GetDDSInfo(s),i.width=a.width,i.height=a.height,m&&(a.sphericalPolynomial=new t),l=(a.isRGB||a.isLuminance||a.mipmapCount>1)&&i.generateMipMaps,o._unpackFlipY(a.isCompressed),n.UploadDDSLevels(o,i,s,a,l,6),!a.isFourCC&&a.mipmapCount===1?o.generateMipMapsForCubemap(i,!1):d=a.mipmapCount-1}o._setCubeMapTextureParams(i,l,d),i.isReady=!0,i.onLoadedObservable.notifyObservers(i),i.onLoadedObservable.clear(),e&&e({isDDS:!0,width:i.width,info:a,data:p,texture:i})}loadData(p,i,m){const e=n.GetDDSInfo(p),o=(e.isRGB||e.isLuminance||e.mipmapCount>1)&&i.generateMipMaps&&Math.max(e.width,e.height)>>e.mipmapCount-1===1;m(e.width,e.height,o,e.isFourCC,()=>{n.UploadDDSLevels(i.getEngine(),i,p,e,o,1)})}}export{c as _DDSTextureLoader};
